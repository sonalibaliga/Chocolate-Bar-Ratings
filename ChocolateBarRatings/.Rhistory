shiny::runApp('C:/Users/Student User/Desktop/Chocolate-Bar-Ratings/ChocolateBarRatings')
source('C:/Users/Student User/Desktop/Chocolate-Bar-Ratings/ChocolateBarRatings/tables.R')
mainPanel(
titlePanel("Chocolate Bar Ratings"),
# Create a new Row in the UI for selectInputs
fluidRow(
column(4,
selectInput("com",
"Company:",
c("All",
unique(as.character(input$property))))
),
column(4,
selectInput("coc",
"Cocoa Percent:",
c("All",
unique(as.character(input$property))))
),
column(4,
selectInput("com",
"Company Location:",
c("All",
unique(as.character(input$property))))
),
column(4,
selectInput("rat",
"Rating:",
c("All",
unique(as.character(input$property))))
)
),
# Create a new row for the table.
fluidRow(
DT::dataTableOutput("table")
)
)
source('C:/Users/Student User/Desktop/Chocolate-Bar-Ratings/ChocolateBarRatings/tables.R')
setwd("C:/Users/Student User/Desktop/Chocolate-Bar-Ratings")
setwd("C:/Users/Student User/Desktop/Chocolate-Bar-Ratings/ChocolateBarRatings")
data <- read.csv("C:/Users/Student User/Desktop/Chocolate-Bar-Ratings/ChocolateBarRatings/flavors_of_cacao.csv", sep = "\t", header = TRUE, stringsAsFactors = FALSE)
data <- read.csv("./ChocolateBarRatings/flavors_of_cacao.csv", sep = "\t", header = TRUE, stringsAsFactors = FALSE)
setwd("C:/Users/Student User/Desktop/Chocolate-Bar-Ratings")
data <- read.csv("./ChocolateBarRatings/flavors_of_cacao.csv", sep = "\t", header = TRUE, stringsAsFactors = FALSE)
output$table <- renderTable({
data <- chocolate
f <- function(x) {
substring(x, 1, nchar(x)-1)
}
n <- apply (data$cocao, 1, f)
n <- as.integer(n)
b1 <- (n >= input$cocoa[1])
b2 <- (n <= input$cocoa[2])
data <- data[b1 & b2]
if (input$beanorigin != "NONE") {
data <- data[data$Broad.Bean.Origin  == input$beanorigin,]
}
if (input$company. != "NONE") {
data <- data[data$Company...Maker.if.known == input$company,]
}
data <- arrange(data, desc(Rating))
})
chocolate <- read.csv("./ChocolateBarRatings/flavors_of_cacao.csv", sep = "\t", header = TRUE, stringsAsFactors = FALSE)
source('C:/Users/Student User/Desktop/Chocolate-Bar-Ratings/ChocolateBarRatings/tables.R')
chocolate <- read.csv("./ChocolateBarRatings/flavors_of_cacao.csv", sep = "\t", header = TRUE, stringsAsFactors = FALSE)
setwd("C:/Users/Student User/Desktop/Chocolate-Bar-Ratings/ChocolateBarRatings")
chocolate <- read.csv("./ChocolateBarRatings/flavors_of_cacao.csv", sep = "\t", header = TRUE, stringsAsFactors = FALSE)
chocolate <- read.csv("./flavors_of_cacao.csv", header = TRUE, stringsAsFactors = FALSE)
data <- chocolate
f <- function(x) {
substring(x, 1, nchar(x)-1)
}
n <- apply (data$cocao, 1, f)
n <- as.integer(n)
b1 <- (n >= input$cocoa[1])
b2 <- (n <= input$cocoa[2])
data <- data[b1 & b2]
if (input$beanorigin != "NONE") {
data <- data[data$Broad.Bean.Origin  == input$beanorigin,]
}
if (input$company. != "NONE") {
data <- data[data$Company...Maker.if.known == input$company,]
}
data <- arrange(data, desc(Rating))
})
library(dplyr)
output$table <- renderTable({
data <- chocolate
f <- function(x) {
substring(x, 1, nchar(x)-1)
}
n <- apply (data$cocao, 1, f)
n <- as.integer(n)
b1 <- (n >= input$cocoa[1])
b2 <- (n <= input$cocoa[2])
data <- data[b1 & b2]
if (input$beanorigin != "NONE") {
data <- data[data$Broad.Bean.Origin  == input$beanorigin,]
}
if (input$company. != "NONE") {
data <- data[data$Company...Maker.if.known == input$company,]
}
data <- arrange(data, desc(Rating))
})
data <- chocolate
f <- function(x) {
substring(x, 1, nchar(x)-1)
}
n <- apply (data$cocao, 1, f)
n <- as.integer(n)
b1 <- (n >= input$cocoa[1])
b2 <- (n <= input$cocoa[2])
data <- data[b1 & b2]
if (input$beanorigin != "NONE") {
data <- data[data$Broad.Bean.Origin  == input$beanorigin,]
}
if (input$company. != "NONE") {
data <- data[data$Company...Maker.if.known == input$company,]
}
data <- arrange(data, desc(Rating))
})
library(dplyr)
data <- chocolate
f <- function(x) {
substring(x, 1, nchar(x)-1)
}
n <- apply (data$cocao, 1, f)
n <- as.integer(n)
b1 <- (n >= input$cocoa[1])
b2 <- (n <= input$cocoa[2])
data <- data[b1 & b2]
if (input$beanorigin != "NONE") {
data <- data[data$Broad.Bean.Origin  == input$beanorigin,]
}
if (input$company. != "NONE") {
data <- data[data$Company...Maker.if.known == input$company,]
}
data <- arrange(data, desc(Rating))
})
View(chocolate)
data <- chocolate
f <- function(x) {
substring(x, 1, nchar(x)-1)
}
n <- apply (data$cocao, 1, f)
n <- as.integer(n)
b1 <- (n >= 50)
b2 <- (n <= 70)
data <- data[b1 & b2]
if (Ecuador != "NONE") {
data <- data[data$Broad.Bean.Origin  == "Ecuador"]
}
if (Ghana != "NONE") {
data <- data[data$Company.Location == "Ghana"]
}
data <- arrange(data, desc(Rating))
data <- chocolate
f <- function(x) {
substring(x, 1, nchar(x)-1)
}
n <- apply (data$cocao, 1, f)
n <- as.integer(n)
b1 <- (n >= 50)
b2 <- (n <= 70)
data <- data[b1 & b2]
if ("Ecuador" != "NONE") {
data <- data[data$Broad.Bean.Origin  == "Ecuador"]
}
if ("Ghana" != "NONE") {
data <- data[data$Company.Location == "Ghana"]
}"
data <- arrange(data, desc(Rating))
data <- chocolate
f <- function(x) {
substring(x, 1, nchar(x)-1)
}
n <- apply (data$cocao, 1, f)
n <- as.integer(n)
b1 <- (n >= 50)
b2 <- (n <= 70)
data <- data[b1 & b2]
if ("Ecuador" != "NONE") {
data <- data[data$Broad.Bean.Origin  == "Ecuador"]
}
if ("Ghana" != "NONE") {
data <- data[data$Company.Location == "Ghana"]
}
data <- arrange(data, desc(Rating))
data <- filter(data, Broad.Bean.Origin == "Ecuador" )
View(data)
data <- filter(data, Company.Location == "Ghana")
data <- chocolate
data <- filter(data, Broad.Bean.Origin == "Ecuador")
data <- filter(data, Company.Location == "U.S.A.")
data <- arrange(data, desc(Rating))
shiny::runApp()
runApp()
runApp()
runApp()
data$Cocoa.Percent
apply(data$Cocoa.Percent, 1, f)
length(data$Cocoa.Percent)
apply(data$Cocoa.Percent, f)
apply(data$Cocoa.Percent, FUN = f)
lapply(data$Cocoa.Percent, 1, f)
lapply(data$Cocoa.Percent, f)
typeof(lapply(data$Cocoa.Percent, f))
as.interger(lapply(data$Cocoa.Percent, f))
as.Interger(lapply(data$Cocoa.Percent, f))
as.integerlapply((data$Cocoa.Percent, f))
as.integer(lapply(data$Cocoa.Percent, f))
runApp()
n <- lapply(data$Cocoa.Percent, f)
n <- as.integer(n)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
b1 <- n >= 50
b2 <- n <= 70
data <- filter(data, b1 & b2)
runApp()
runApp()
runApp()
runApp()
chocolate <- read.csv("./flavors_of_cacao.csv", header = TRUE, stringsAsFactors = FALSE)
data <- chocolate
f <- function(x) {
substring(x, 1, nchar(x)-1)
}
n <- lapply(data$Cocoa.Percent, f)
n <- as.integer(n)
b1 <- n >= 50
b2 <- n <= 70
data <- filter(data, b1 & b2)
View(data)
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
